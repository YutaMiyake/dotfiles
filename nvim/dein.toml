[[plugins]]
repo = 'Shougo/dein.vim' 

[[plugins]]
repo = 'altercation/vim-colors-solarized'

hook_add = '''
colorscheme solarized
set background=dark
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
map <C-w>t :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = 'scrooloose/nerdtree'

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add='''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add='''
let g:airline_powerline_fonts = 1 
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#whitespace#enabled = 0
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
let g:airline_solarized_bg='dark'
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set signcolumn=yes
set updatetime=100
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
if = "has('python3')"
hook_add = '''
" Define mappings
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
  \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d
  \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
  \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
  \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> i
  \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
  \ denite#do_map('toggle_select').'j'
endfunction
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
set rtp+=/usr/local/opt/fzf
let g:fzf_buffers_jump = 1
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-s': 'split',
  \ 'ctrl-v': 'vsplit' }
nnoremap <C-f> :GFiles<CR>
nnoremap <C-b> :Buffers<CR>
nnoremap <C-g> :GGrep<CR>
nnoremap <C-r> :History<CR>

command! -bang -nargs=* GGrep
  \ call fzf#vim#grep(
  \   'git grep --line-number '.shellescape(<q-args>), 0,
  \   fzf#vim#with_preview({ 'dir': systemlist('git rev-parse --show-toplevel')[0] }), <bang>0)

command! -bang -nargs=* Ag
  \ call fzf#vim#ag(<q-args>,
  \                 <bang>0 ? fzf#vim#with_preview('up:60%')
  \                         : fzf#vim#with_preview('right:50%:hidden', '?'),
  \                 <bang>0)

command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)

command! -bang -nargs=? -complete=dir GFiles
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
'''


[[plugins]]
repo  = 'cespare/vim-toml'

[[plugins]]
repo = 'fatih/vim-go'
